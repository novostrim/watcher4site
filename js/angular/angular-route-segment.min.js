/**
 * angular-route-segment v1.2.0
 * https://angular-route-segment.com
 * @author Artem Chivchalov
 * @license MIT License http://opensource.org/licenses/MIT
 */
"use strict";
!function (a) {
    a.module("route-segment", []).provider("$routeSegment", ["$routeProvider", function (b) {
        function c(a) {
            return a.replace(/([\:\-\_]+(.))/g, function (a, b, c, d) {
                return d ? c.toUpperCase() : c
            })
        }

        function d(a, b) {
            if (!a)throw new Error("Invalid pointer segment");
            var e;
            return {
                segment: function (b, d) {
                    return a[c(b)] = {params: d}, e = b, this
                }, within: function (b) {
                    var g;
                    if (b = b || e, g = a[c(b)])void 0 == g.children && (g.children = {}); else {
                        if (f.strictMode)throw new Error("Cannot get into unknown `" + b + "` segment");
                        g = a[c(b)] = {params: {}, children: {}}
                    }
                    return d(g.children, this)
                }, up: function () {
                    return b
                }, root: function () {
                    return h
                }
            }
        }

        var e = this, f = e.options = {autoLoadTemplates: !1, strictMode: !1}, g = this.segments = {}, h = d(g, null);
        e.when = function (a, c) {
            return b.when(a, {segment: c}), this
        }, a.extend(e, h), this.$get = ["$rootScope", "$q", "$http", "$templateCache", "$route", "$routeParams", "$injector", function (b, d, e, h, i, j, k) {
            function l(b) {
                var c = !1;
                return b.params.dependencies && a.forEach(b.params.dependencies, function (b) {
                    a.equals(q.$routeParams[b], j[b]) || (c = !0)
                }), c
            }

            function m(a, b) {
                return q.chain[a] && q.chain[a].clearWatcher && q.chain[a].clearWatcher(), b ? (r[a] = b.name, b.params.untilResolved ? n(a, b.name, b.params.untilResolved).then(function (c) {
                    return void 0 != c.success && o(a), n(a, b.name, b.params)
                }) : n(a, b.name, b.params)) : (r[a] = null, o(a), void 0)
            }

            function n(c, g, i) {
                var j = a.extend({}, i.resolve);
                return a.forEach(j, function (b, c) {
                    j[c] = a.isString(b) ? k.get(b) : k.invoke(b)
                }), i.template && (j.$template = i.template), f.autoLoadTemplates && i.templateUrl && (j.$template = e.get(i.templateUrl, {cache: h}).then(function (a) {
                    return a.data
                })), d.all(j).then(function (e) {
                    if (r[c] != g)return d.reject();
                    if (q.chain[c] = {
                            name: g, params: i, locals: e, reload: function () {
                                m(c, this).then(function (a) {
                                    void 0 != a.success && o(c)
                                })
                            }
                        }, i.watcher) {
                        var f = function () {
                            if (!a.isFunction(i.watcher))throw new Error("Watcher is not a function in segment `" + g + "`");
                            return k.invoke(i.watcher, {}, {segment: q.chain[c]})
                        }, h = f();
                        q.chain[c].clearWatcher = b.$watch(f, function (a) {
                            a != h && (h = a, q.chain[c].reload())
                        })
                    }
                    return {success: c}
                }, function (b) {
                    if (i.resolveFailed) {
                        var e = {
                            error: function () {
                                return d.when(b)
                            }
                        };
                        return n(c, g, a.extend({resolve: e}, i.resolveFailed))
                    }
                    throw new Error("Resolving failed with a reason `" + b + "`, but no `resolveFailed` " + "provided for segment `" + g + "`")
                })
            }

            function o(c) {
                q.$routeParams = a.copy(j), q.name = "";
                for (var d = 0; d < q.chain.length; d++)q.name += q.chain[d].name + ".";
                q.name = q.name.substr(0, q.name.length - 1), b.$broadcast("routeSegmentChange", {
                    index: c,
                    segment: q.chain[c] || null
                })
            }

            function p(a, b) {
                if (!b)return null;
                if (a >= b.length)return null;
                for (var d, e = g, f = 0; a >= f; f++)d = b[f], void 0 != e[c(d)] && (e = e[c(d)]), a > f && (e = e.children);
                return {name: d, params: e.params}
            }

            var q = {
                name: "", $routeParams: a.copy(j), chain: [], startsWith: function (a) {
                    var b = new RegExp("^" + a);
                    return b.test(q.name)
                }, contains: function (a) {
                    for (var b = 0; b < this.chain.length; b++)if (this.chain[b].name == a)return !0;
                    return !1
                }
            }, r = {};
            return b.$on("$routeChangeSuccess", function (a, b) {
                var c = b.$route || b.$$route;
                if (c && c.segment) {
                    for (var e = c.segment, f = e.split("."), g = [], h = 0; h < f.length; h++) {
                        var i = p(h, f);
                        (r[h] != i.name || l(i)) && (q.chain[h] && q.chain[h].name == i.name && !l(i) ? r[h] = i.name : g.push({
                            index: h,
                            newSegment: i
                        }))
                    }
                    var j = d.when();
                    if (g.length > 0)for (var h = 0; h < g.length; h++)!function (a) {
                        j = j.then(function () {
                            return m(g[a].index, g[a].newSegment)
                        }).then(function (a) {
                            void 0 != a.success && o(a.success)
                        })
                    }(h);
                    j.then(function () {
                        if (q.chain.length > f.length) {
                            var a = q.chain.length, b = q.chain.length - f.length;
                            q.chain.splice(-b, b);
                            for (var c = f.length; a > c; c++)m(c, null)
                        }
                    })
                }
            }), q
        }]
    }])
}(angular), function (a) {
    a.module("view-segment", ["route-segment"]).directive("appViewSegment", ["$route", "$compile", "$controller", "$routeParams", "$routeSegment", "$q", "$injector", function (b, c, d, e, f, g, h) {
        return {
            restrict: "ECA", priority: 500, compile: function (b, e) {
                var g = b.html(), i = !0, j = a.element(document.createComment(" view-segment "));
                return b.prepend(j), function (k) {
                    function l() {
                        o && (q.leave(o), o = null), n && (n.$destroy(), n = null)
                    }

                    function m(e) {
                        if (p = e, i && (i = !1, b.replaceWith(j)), !e)return l(), o = b.clone(), o.html(g), q.enter(o, null, j), c(o, !1, 499)(k), void 0;
                        var f = a.extend({}, e.locals), h = f && f.$template;
                        l(), o = b.clone(), o.html(h ? h : g), q.enter(o, null, j);
                        var m, s = c(o, !1, 499);
                        n = k.$new(), e.params.controller && (f.$scope = n, m = d(e.params.controller, f), e.params.controllerAs && (n[e.params.controllerAs] = m), o.data("$ngControllerController", m), o.children().data("$ngControllerController", m)), s(n), n.$emit("$viewContentLoaded"), n.$eval(r)
                    }

                    var n, o, p, q, r = e.onload || "", s = parseInt(e.appViewSegment);
                    try {
                        var t = h.get("$animator");
                        q = t(k, e)
                    } catch (u) {
                    }
                    try {
                        q = h.get("$animate")
                    } catch (u) {
                    }
                    f.chain[s] && m(f.chain[s]), k.$on("routeSegmentChange", function (a, b) {
                        b.index == s && p != b.segment && m(b.segment)
                    })
                }
            }
        }
    }])
}(angular);